---
title: "PS1_code"
format: html
editor: visual
---

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

## Problem 1

### Task (a)

We read the data set first.

```{r}
data <- read.table("./wine.data", sep = ",", header = FALSE)
data <- data.frame(data)
```

And we need to name each column using information in `wine.names`.

```{r}
attribNames <- c("class", "Alcohol", "Malic acid", "Ash", "Alcalinity of ash", "Magnesium", "Total phenols", "Flavanoids", "Nonflavanoid phenols", "Proanthocyanins", "Color intensity", "Hue", "OD280/OD315 of diluted wines", "Proline")
colnames(data) <- attribNames
```

### Task (b)

Here, we check whether the column names match the class and attributes in `wine.names`.

```{r}
print(data)
```

### Task (c)

1.The wine with the highest alcohol content belongs to which class?

```{r}
data[which.max(data$Alcohol),]$class
```

2.The wine with the lowest alcohol content belongs to which class?

```{r}
data[which.min(data$Alcohol),]$class
```

3.German beers have, on average, 114 mg/l of magnesium. How many of these wines have higher levels of magnesium than that?

```{r}
averMag <- 114
length(which(data$Magnesium > averMag))
```

4.Within each class, how many wines have higher levels of magnesium than average German beer?

```{r}
num_class <- max(data$class)
for (i in 1:num_class){
  
  #Compute the number of wines for class i
  
  numWines <- length(which(((data$Magnesium > averMag) & (data$class == i)))) 
  
  #Print the result as a sentence
  
  cat("Within class ", toString(i) , ", ", toString(numWines) , " wines have higher levels of magnesium than average German beer.\n")
}
```

### Task (d)

```{r}
#table <- data.frame(matrix(0,))
#colMeans(data[,-1])

# Number of rows and number of attributes of wine data set

numRows <- dim(data)[1]
numAttrib <- dim(data)[2]-1

# Create an empty table to contain the statistics computed

table <- matrix(0, nrow = 4, ncol = numAttrib)
table <- data.frame(table)

# Compute the statistics (Overall average and average within each class) and fill them in the table

table[1,] = colMeans(data[,-1])
table[2,] =colMeans(data[which(data$class == 1),-1])
table[3,] =colMeans(data[which(data$class == 2),-1])
table[4,] =colMeans(data[which(data$class == 3),-1])

# Name each rows columns
colnames(table) <- attribNames[-1]
rownames(table) <- c("Overall average", "Class 1 average", "Class 2 average", "Class 3 average")

# Print the table
print(table)
```

$$
t_1 = \frac{\hat{\beta_1}-\beta_1^0}{s.e.(\hat{\beta_1)}}
$$
